# 定义相关对象及属性
[main]
# 声明定义的Realm
firstRealm = com.zachard.shiro.hello.realm.FirstRealm
secondRealm = com.zachard.shiro.hello.realm.SecondRealm
thirdRealm = com.zachard.shiro.hello.realm.ThirdRealm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# 配置用户／角色／权限的数据源
dataSource = com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName = com.mysql.jdbc.Driver
dataSource.url = jdbc:mysql://10.211.55.3:3306/shiro
dataSource.username = root
dataSource.password = zpzeng

jdbcRealm.dataSource = $dataSource

# 声明SecurityManager的权限认证实现 (ModularRealmAuthenticator会委托多个Realm对登录进行验证)
authenticator = org.apache.shiro.authc.pam.ModularRealmAuthenticator

# 声明验证规则策略,其他的还有FirstSuccessfulStrategy和AtLeastOneSuccessfulStrategy
# ModularRealmAuthenticator默认为AtLeastOneSuccessfulStrategy策略
allSuccessfulStrategy = org.apache.shiro.authc.pam.AllSuccessfulStrategy
firstSuccessfulStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
atLeastOneSuccessfulStrategy = org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
onlyOneSuccessfulStrategy = com.zachard.shiro.hello.strategy.OnlyOneSuccessfulStrategy
atLeastTwoSuccessfulStrategy = com.zachard.shiro.hello.strategy.AtLeastTwoSuccessfulStrategy

# 指定SecurityManager的Realm实现(仅指定有效,未指定按照定义的顺序)
securityManager.authenticator = $authenticator
securityManager.authenticator.authenticationStrategy = $atLeastTwoSuccessfulStrategy
securityManager.realms = $secondRealm, $firstRealm, $thirdRealm

# 配置系统用户
[users]
zachard = admin
# wang = wang