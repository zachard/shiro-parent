# 定义相关对象及属性
[main]
# 声明Authorize的权限解析实现
#permissionResolver = org.apache.shiro.authz.permission.WildcardPermissionResolver
permissionResolver = com.zachard.shiro.hello.permission.BitAndWildPermissionResolver
# 声明自定义的Authorize角色权限解析实现
rolePermissionResolver = com.zachard.shiro.hello.permission.CustomRolePermissionResolver

# 声明SecurityManager的访问控制实现 (ModularRealmAuthorizer会委托多个Realm对访问控制验证, 只要一个匹配就行)
authorizer = org.apache.shiro.authz.ModularRealmAuthorizer
authorizer.permissionResolver = $permissionResolver
authorizer.rolePermissionResolver = $rolePermissionResolver

# 声明SecurityManager的权限认证实现 (ModularRealmAuthenticator会委托多个Realm对登录进行验证)
authenticator = org.apache.shiro.authc.pam.ModularRealmAuthenticator

# 声明验证规则策略,其他的还有FirstSuccessfulStrategy和AtLeastOneSuccessfulStrategy
# ModularRealmAuthenticator默认为AtLeastOneSuccessfulStrategy策略
allSuccessfulStrategy = org.apache.shiro.authc.pam.AllSuccessfulStrategy
firstSuccessfulStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
atLeastOneSuccessfulStrategy = org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
onlyOneSuccessfulStrategy = com.zachard.shiro.hello.strategy.OnlyOneSuccessfulStrategy
atLeastTwoSuccessfulStrategy = com.zachard.shiro.hello.strategy.AtLeastTwoSuccessfulStrategy

# 指定SecurityManager登录验证实现
# securityManager.authenticator = $authenticator
# securityManager.authenticator.authenticationStrategy = $atLeastTwoSuccessfulStrategy
# 指定SecurityManager的访问控制实现
securityManager.authorizer = $authorizer

# 指定SecurityManager的Realm实现(仅指定有效,未指定按照定义的顺序), realm的声明及赋值一定要放在最后
# 声明定义的Realm
firstRealm = com.zachard.shiro.hello.realm.FirstRealm
secondRealm = com.zachard.shiro.hello.realm.SecondRealm
thirdRealm = com.zachard.shiro.hello.realm.ThirdRealm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# 配置用户／角色／权限的数据源
dataSource = com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName = com.mysql.jdbc.Driver
dataSource.url = jdbc:mysql://10.211.55.3:3306/shiro
dataSource.username = root
dataSource.password = zpzeng

jdbcRealm.dataSource = $dataSource
jdbcRealm.permissionsLookupEnabled = true

# securityManager.realms = $jdbcRealm

# 配置系统用户
[users]
zachard = admin, admin, cto
wang = wang, developer
guest = guest, guest

# 配置系统角色拥有的权限
[roles]
admin = *
cto = user:create, user:update, *:view
developer = developer, user:update 
guest = website:view